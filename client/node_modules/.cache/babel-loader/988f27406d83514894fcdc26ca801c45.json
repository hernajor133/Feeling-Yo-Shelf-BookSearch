{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordi\\\\Documents\\\\Homework\\\\Feeling-Yo-Shelf-BookSearch\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [userFormData, setUserFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUser] = useMutation(LOGIN_USER);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        data\n      } = await loginUser({\n        variables: { ...userFormData\n        }\n      });\n      Auth.loginUser(data.loginUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        dismissible: true,\n        onClose: () => setShowAlert(false),\n        show: showAlert,\n        variant: \"danger\",\n        children: \"Something went wrong with your login credentials!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Your email\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: userFormData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Email is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Your password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: userFormData.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Password is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(userFormData.email && userFormData.password),\n        type: \"submit\",\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginForm, \"fGJPxf9Rs4edWlkrNBhdOx0ulAg=\", false, function () {\n  return [useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Jordi/Documents/Homework/Feeling-Yo-Shelf-BookSearch/client/src/components/LoginForm.js"],"names":["React","useState","Form","Button","Alert","useMutation","LOGIN_USER","Auth","LoginForm","userFormData","setUserFormData","email","password","validated","showAlert","setShowAlert","loginUser","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","data","variables","token","err","console","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [loginUser] = useMutation(LOGIN_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await loginUser({\r\n        variables: { ...userFormData },\r\n      });\r\n      Auth.loginUser(data.loginUser.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your email\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}